version: "3.8"

services:
  postgres:
    container_name: todo_postgres
    image: postgres:15
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - todo-network

  pgadmin:
    container_name: todo_pgadmin
    image: dpage/pgadmin4
    restart: always
    env_file: .env
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - todo-network

  backend:
    container_name: todo_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    restart: always
    env_file: .env
    environment:
      DB_HOST: postgres # Use the service name in Docker network
      DB_PORT: 5432
    ports:
      - "3001:3000" # Map 3001 on host to 3000 in container
    depends_on:
      - postgres
    networks:
      - todo-network

  frontend:
    container_name: todo_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    restart: always
    ports:
      - "4200:80" # Map 4200 on host to 80 in container (Nginx)
    depends_on:
      - backend
    networks:
      - todo-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  todo-network:
    driver: bridge
